server:
  port: 8080 # 충돌 문제 시 수정
spring:
  # JPA
  jpa:
    hibernate:
      ddl-auto: create # 개발 시는 create 또는 update 추천
      # ddl-auto: none # 배포 시는 none 또는 validate 추천
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        # dialect: org.hibernate.dialect.PostgreSQLDialect # PostgreSQL
#        dialect: org.hibernate.dialect.H2Dialect
        show_sql: true
        format_sql: true
  # Security
#  security:
#    user:
#      name: ${SECURITY_USER}
#      password: ${SECURITY_PASSWORD}
  # 데이터소스
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver # MySQL
    # driver-class-name: org.postgresql.Driver # PostgreSQL
#    driver-class-name: org.h2.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  security:
    oauth2:
          client:
            registration:
              naver:
                client-name: ${NAVER_CLIENT_NAME}
                client-id: ${NAVER_CLIENT_ID}
                client-secret: ${NAVER_CLIENT_SECRET}
                redirect-uri: ${NAVER_CLIENT_REDIRECT_URI}
                authorization-grant-type: ${NAVER_CLIENT_GRANT_TYPE}
                scope: ${NAVER_CLIENT_SCOPE}

              kakao:
                client-name: ${KAKAO_CLIENT_NAME}
                client-id: ${KAKAO_CLIENT_ID}
                client-secret: ${KAKAO_CLIENT_SECRET}
                redirect-uri: ${KAKAO_CLIENT_REDIRECT_URI}
                authorization-grant-type: ${KAKAO_CLIENT_GRANT_TYPE}
                scope: ${KAKAO_CLIENT_SCOPE}

#              google:
#                client-name: ${GOOGLE_CLIENT_NAME}
#                client-id: ${GOOGLE_CLIENT_ID}
#                client-secret: ${GOOGLE_CLIENT_SECRET}
#                redirect-uri: ${GOOGLE_CLIENT_REDIRECT_URI}
#                authorization-grant-type: ${GOOGLE_CLIENT_GRANT_TYPE}
#                scope: ${GOOGLE_CLIENT_SCOPE}

            provider:
              naver:
                authorization-uri: ${NAVER_AUTHORIZATION_URI}
                token-uri: ${NAVER_TOKEN_URI}
                user-info-uri: ${NAVER_USER_INFO_URI}
                user-name-attribute: ${NAVER_USER_NAME_ATTRIBUTE}

              kakao:
                authorization-uri: ${KAKAO_AUTHORIZATION_URI}
                token-uri: ${KAKAO_TOKEN_URI}
                user-info-uri: ${KAKAO_USER_INFO_URI}
                user-name-attribute: ${KAKAO_USER_NAME_ATTRIBUTE}

# JWT
  jwt:
    # openssl rand -base64 32
    secret: ${JWT_SECRET}
    expiration-ms: ${JWT_EXPIRATION_MS} # 1시간

# Swagger
# 여러 가지 설정 on-off 및 dev, prod 분기
springdoc:
  swagger-ui:
    enabled: true # 개발 환경에선
    # enabled: false # 배포 환경에선
  api-docs:
    enabled: true # 개발 환경에선
    # enabled: false # 배포 환경에선
# 객체 스토리지
#supabase:
#  url: ${SUPABASE_URL}
#  access-key: ${SUPABASE_ACCESS_KEY}
#  pdf-bucket-name: ${SUPABASE_PDF_BUCKET_NAME}
#  sheet-bucket-name: ${SUPABASE_SHEET_BUCKET_NAME}
#  img-bucket-name: ${SUPABASE_IMG_BUCKET_NAME}

front:
  url: ${FRONT_URL}


